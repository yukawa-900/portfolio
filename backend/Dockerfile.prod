###########
# BUILDER #
###########

# builderはPython wheels を作成するための一時的なイメージ
FROM python:3.6-alpine3.6 as builder

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

COPY ./requirements.txt .

RUN set -e; \
  apk update \
  && apk add --virtual .build-deps gcc python3-dev musl-dev libffi-dev \
  && apk del libressl-dev \
  && apk add openssl-dev \
  && pip install cryptography==2.2.2 \
  && apk del openssl-dev \
  && apk add libressl-dev \
  && apk add postgresql-dev \
  && apk add jpeg-dev zlib-dev libjpeg libmagic \
  && pip install --upgrade pip \
  && pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt \
  && apk del .build-deps

# lint
RUN pip install flake8
COPY . .
RUN flake8 .

#########
# FINAL #
#########

FROM python:3.6-alpine3.6

# create directory for the app user
RUN mkdir -p /home/app

# グループとユーザーを作成（non-root userを作成）
#「adduser ユーザー名 グループ名」で、ユーザーを指定したグループに追加します
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
# staticディレクトリを明示的に作らないと、permission denied error がでる。（non-root userの場合）
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
RUN apk add jpeg-dev zlib-dev libjpeg libmagic
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# $APP_HOMEフォルダの所有者をappに、グループをappにする
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]